// <auto-generated />
using System;
using CarsInventory.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarsInventory.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231113232800_correep")]
    partial class Correep
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarsInventory.Shared.Entities.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("cod_postal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ciudades");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Cliente", b =>
                {
                    b.Property<int>("clienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("clienteId"));

                    b.Property<string>("Med_Pago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("personaId")
                        .HasColumnType("int");

                    b.HasKey("clienteId");

                    b.HasIndex("personaId");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fec_Nac")
                        .HasColumnType("datetime2");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("cedulaId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("cedulaId")
                        .IsUnique();

                    b.ToTable("personas");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion_fin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion_origen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TecnicoId")
                        .HasColumnType("int");

                    b.Property<int?>("VehiculoId")
                        .HasColumnType("int");

                    b.Property<decimal>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("fechaServicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("placaVh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TecnicoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("servicios");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Tecnico", b =>
                {
                    b.Property<int>("tecnicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tecnicoId"));

                    b.Property<string>("Num_Permiso_Conducir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("personaId")
                        .HasColumnType("int");

                    b.HasKey("tecnicoId");

                    b.HasIndex("personaId");

                    b.ToTable("tecnicos");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("modelo")
                        .HasColumnType("int");

                    b.Property<string>("placaVh")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("placaVh")
                        .IsUnique();

                    b.ToTable("vehiculos");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Cliente", b =>
                {
                    b.HasOne("CarsInventory.Shared.Entities.Persona", "persona")
                        .WithMany("Cliente")
                        .HasForeignKey("personaId");

                    b.Navigation("persona");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Servicio", b =>
                {
                    b.HasOne("CarsInventory.Shared.Entities.Ciudad", "Ciudad")
                        .WithMany("Servicio")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarsInventory.Shared.Entities.Cliente", "Cliente")
                        .WithMany("Servicio")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarsInventory.Shared.Entities.Tecnico", "Tecnico")
                        .WithMany("Servicio")
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarsInventory.Shared.Entities.Vehiculo", "Vehiculo")
                        .WithMany("Servicio")
                        .HasForeignKey("VehiculoId");

                    b.Navigation("Ciudad");

                    b.Navigation("Cliente");

                    b.Navigation("Tecnico");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Tecnico", b =>
                {
                    b.HasOne("CarsInventory.Shared.Entities.Persona", "persona")
                        .WithMany("Tecnico")
                        .HasForeignKey("personaId");

                    b.Navigation("persona");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Vehiculo", b =>
                {
                    b.HasOne("CarsInventory.Shared.Entities.Cliente", "Cliente")
                        .WithMany("Vehiculo")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Ciudad", b =>
                {
                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Cliente", b =>
                {
                    b.Navigation("Servicio");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Persona", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Tecnico", b =>
                {
                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("CarsInventory.Shared.Entities.Vehiculo", b =>
                {
                    b.Navigation("Servicio");
                });
#pragma warning restore 612, 618
        }
    }
}
